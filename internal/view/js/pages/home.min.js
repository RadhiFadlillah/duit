import{Button,LoadingCover,AccountList,EntryList}from"../components/_components.min.js";import{DialogError,DialogConfirm,DialogFormAccount,DialogFormEntry,DialogListAccount}from"../dialogs/_dialogs.min.js";import{request,cloneObject,mergeObject}from"../libs/utils.min.js";import{Big}from"../libs/big.min.js";export function Home(){let e={loading:!1,accounts:[],selectedAccounts:[],accountsLoading:!1,activeAccount:null,entries:[],selectedEntries:[],entriesLoading:!1,pagination:{page:1,maxPage:1},dlgError:{message:"",visible:!1},dlgNewAccount:{visible:!1,loading:!1},dlgEditAccount:{visible:!1,loading:!1},dlgDeleteAccount:{visible:!1,loading:!1},dlgNewEntry:{visible:!1,loading:!1},dlgTransferEntry:{visible:!1,loading:!1,entry:null}};let t="5s";function n(){if(null==e.activeAccount)return;e.loading=!0,e.entriesLoading=!0,m.redraw();let n=new URL("/api/entries",document.baseURI);n.searchParams.set("page",e.pagination.page),n.searchParams.set("account",e.activeAccount.id),request(n.toString(),t).then(t=>{e.entries=t.entries,e.selectedEntries=[],e.pagination.page=t.page,e.pagination.maxPage=t.maxPage}).catch(t=>{e.dlgError.message=t.message,e.dlgError.visible=!0}).finally(()=>{e.loading=!1,e.entriesLoading=!1,m.redraw()})}return{view:function(i){let c=[];if(0===c.length&&e.dlgError.visible&&c.push(m(DialogError,{message:e.dlgError.message,onAccepted(){e.dlgError.visible=!1}})),0===c.length&&e.dlgNewAccount.visible&&c.push(m(DialogFormAccount,{title:"Akun Baru",loading:e.dlgNewAccount.loading,onAccepted(n){!function(n){e.loading=!0,e.dlgNewAccount.loading=!0,m.redraw();let i={method:"POST",body:JSON.stringify(n)};request("/api/account",t,i).then(t=>{e.accounts.push(t),e.accounts.sort((e,t)=>{let n=e.name.toLowerCase(),i=t.name.toLowerCase();return n<i?-1:n>i?1:0})}).catch(t=>{e.dlgError.message=t.message,e.dlgError.visible=!0}).finally(()=>{e.loading=!1,e.dlgNewAccount.loading=!1,e.dlgNewAccount.visible=!1,m.redraw()})}(n)},onRejected(){e.dlgNewAccount.visible=!1}})),0===c.length&&e.dlgEditAccount.visible){let n=e.selectedAccounts[0],i=e.accounts[n],o=cloneObject(i);c.push(m(DialogFormAccount,{title:"Edit Akun",loading:e.dlgEditAccount.loading,defaultValue:o,onAccepted(n){!function(n){e.loading=!0,e.dlgEditAccount.loading=!0,m.redraw();let i=e.selectedAccounts[0],c=e.accounts[i],o={method:"PUT",body:JSON.stringify({id:c.id,name:n.name,initialAmount:n.initialAmount})};request("/api/account",t,o).then(t=>{e.accounts.splice(i,1,t)}).catch(t=>{e.dlgError.message=t.message,e.dlgError.visible=!0}).finally(()=>{e.loading=!1,e.dlgEditAccount.loading=!1,e.dlgEditAccount.visible=!1,m.redraw()})}(n)},onRejected(){e.dlgEditAccount.visible=!1}}))}0===c.length&&e.dlgDeleteAccount.visible&&c.push(m(DialogConfirm,{title:"Delete Akun",message:`Yakin ingin menghapus ${e.selectedAccounts.length} akun ?`,acceptText:"Ya",rejectText:"Tidak",loading:e.dlgDeleteAccount.loading,onAccepted(){!function(){e.loading=!0,e.dlgDeleteAccount.loading=!0,m.redraw();let n=e.selectedAccounts.map(t=>e.accounts[t].id),i={method:"DELETE",body:JSON.stringify(n)};request("/api/accounts",t,i).then(()=>{e.selectedAccounts.sort((e,t)=>t-e).forEach(t=>{e.accounts.splice(t,1)}),e.selectedAccounts.splice(0,e.selectedAccounts.length)}).catch(t=>{e.dlgError.message=t.message,e.dlgError.visible=!0}).finally(()=>{e.loading=!1,e.dlgDeleteAccount.loading=!1,e.dlgDeleteAccount.visible=!1,m.redraw()})}()},onRejected(){e.dlgDeleteAccount.visible=!1}}));let o=[];e.loading&&o.push(m(LoadingCover));let l=[];return l.push(m(AccountList,{class:"home-account-list",loading:e.accountsLoading,accounts:e.accounts,selection:e.selectedAccounts,onNewClicked(){e.dlgNewAccount.visible=!0},onEditClicked(){e.dlgEditAccount.visible=!0},onDeleteClicked(){e.dlgDeleteAccount.visible=!0},onItemClicked(t){let i=e.activeAccount||{};t.id!==i.id&&(e.activeAccount=t,n())}})),null!=e.activeAccount&&l.push(m(EntryList,{class:"home-entry-list",loading:e.entriesLoading,account:e.activeAccount,entries:e.entries,selection:e.selectedEntries,currentPage:e.pagination.page,maxPage:e.pagination.maxPage,onNewClicked(){},onEditClicked(){},onDeleteClicked(){},onItemClicked(e){},onPageChanged(t){e.pagination.page=t,n()}})),m(".home",...l,...c,...o)},oncreate:function(){e.loading=!0,e.accountsLoading=!0,m.redraw(),request("/api/accounts",t).then(t=>{e.accounts=t,e.selectedAccounts=[],e.activeAccount=null}).catch(t=>{e.dlgError.message=t.message,e.dlgError.visible=!0}).finally(()=>{e.loading=!1,e.accountsLoading=!1,m.redraw()})}}}